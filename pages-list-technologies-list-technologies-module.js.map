{"version":3,"sources":["./src/app/pages/list-technologies/list-technologies-routing.module.ts","./src/app/pages/list-technologies/list-technologies.component.ts","./src/app/pages/list-technologies/list-technologies.component.html","./src/app/pages/list-technologies/list-technologies.module.ts","./src/app/services/list-technologies/list-technologies.service.ts"],"names":[],"mappings":"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","file":"pages-list-technologies-list-technologies-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ListTechnologiesComponent } from './list-technologies.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ListTechnologiesComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ListTechnologiesRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ListTechnologiesService } from '../../services/list-technologies/list-technologies.service';\n\n@Component({\n  selector: 'app-list-technologies',\n  templateUrl: './list-technologies.component.html',\n  styleUrls: ['./list-technologies.component.scss']\n})\nexport class ListTechnologiesComponent implements OnInit {\n\n  techs: any = [];\n  favouriteTechs: any = [];\n  isFavourite = false;\n\n  constructor(\n    private listTechService: ListTechnologiesService\n  ) { }\n\n  ngOnInit(): void {\n    this.getTechs();\n  }\n\n  /**\n   * Funcion para obtener la lista de tecnologias y verificar si en el localstorage alguna ha sido seleccionada\n   * como favorita\n   */\n  async getTechs(): Promise<any> {\n    try {\n      this.techs = await this.listTechService.getListTechnologies();\n      const FAVOURITE_TECHS = localStorage.getItem('favourite_techs');\n      this.favouriteTechs = JSON.parse(FAVOURITE_TECHS);\n      if (FAVOURITE_TECHS !== null) {\n        const RESULT_FAV = this.techs.map(tech => {\n          const RESLT_FIND = this.favouriteTechs.find(favourite => favourite.tech === tech.tech);\n          if (RESLT_FIND !== undefined) {\n            tech.is_favourite = true;\n          }\n          return tech;\n        });\n        this.techs = RESULT_FAV;\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  /**\n   * Funcion para filtrar los elementos de acuerdo a lo escrito\n   *\n   */\n  applyFilter(event: Event): any {\n    const FILTER_VALUE = (event.target as HTMLInputElement).value.trim().toLowerCase();\n    if (FILTER_VALUE === '') {\n      this.getTechs();\n    } else {\n      const RESULT_FILTER = this.techs.filter(tech => {\n        if (tech.tech.trim().toLowerCase().includes(FILTER_VALUE) || tech.type.trim().toLowerCase().includes(FILTER_VALUE)) {\n          return tech;\n        }\n      });\n      this.techs = RESULT_FILTER;\n    }\n  }\n\n  /**\n   * Funcion para ordenar los elementos de forma ascendente por el nombre\n   */\n  orderAsc(): any {\n    this.techs = this.techs.sort((a, b) => {\n      if (a.tech > b.tech) {\n        return 1;\n      }\n      if (a.tech < b.tech) {\n        return -1;\n      }\n      return 0;\n    });\n  }\n\n  /**\n   * Funcion para ordenar los elementos de forma descendente por el nombre\n   */\n  orderDesc(): any {\n    this.techs = this.techs.sort((a, b) => {\n      if (b.tech > a.tech) {\n        return 1;\n      }\n      if (b.tech < a.tech) {\n        return -1;\n      }\n      return 0;\n    });\n  }\n\n  /**\n   * Funcion para marcar una tecnologia como favorita y agregarla al localstorage\n   *\n   */\n  favouriteTech(tech): any {\n    tech.is_favourite = true;\n    this.favouriteTechs = this.favouriteTechs === null ? [] : this.favouriteTechs;\n    this.favouriteTechs.push(tech);\n    localStorage.setItem('favourite_techs', JSON.stringify(this.favouriteTechs));\n    this.isFavourite = true;\n  }\n\n  /**\n   * Funcion para desmarcar una tecnologia como favorita y removerla del localstorage\n   *\n   */\n  removeFavouriteTech(tech): any {\n    delete tech.is_favourite;\n    const INDEX_TECH = this.favouriteTechs.indexOf(tech);\n    this.favouriteTechs.splice(INDEX_TECH, 1);\n    localStorage.setItem('favourite_techs', JSON.stringify(this.favouriteTechs));\n    this.isFavourite = true;\n  }\n\n}\n","<app-header [isFavourite]=\"isFavourite\"></app-header>\n\n<div class=\"list-tech top-space\">\n  <div class=\"list-tech__content general-grid\">\n      <h1 class=\"list-tech__content__title\">Listado de tecnologías</h1>\n\n    <div>\n        <input type=\"text\" placeholder=\"Buscar\" (keyup)=\"applyFilter($event)\">\n        <button (click)=\"orderAsc()\">Ordernar ascendente</button>\n        <button (click)=\"orderDesc()\">Ordernar descendente</button>\n    </div>\n\n    <div class=\"list-tech__content__grid list-tech__content__grid--header\">\n      <div class=\"list-tech__content__grid__field\">\n        <p>Nombre</p>\n      </div>\n      <div class=\"list-tech__content__grid__field\">\n        <p>Lenguaje</p>\n      </div>\n      <div class=\"list-tech__content__grid__field\">\n        <p>Tipo</p>\n      </div>\n      <div class=\"list-tech__content__grid__field\">\n        <p>Más información</p>\n      </div>\n      <div class=\"list-tech__content__grid__field\">\n        <p>Favorito</p>\n      </div>\n    </div>\n\n    <div class=\"list-tech__content__grid list-tech__content__grid--element\" *ngFor=\"let tech of techs\">\n      <div class=\"list-tech__content__grid__field\">\n        <p>{{ tech.tech }}</p>\n      </div>\n      <div class=\"list-tech__content__grid__field\">\n        <p>{{ tech.language }}</p>\n      </div>\n      <div class=\"list-tech__content__grid__field\">\n        <p>{{ tech.type }}</p>\n      </div>\n      <div class=\"list-tech__content__grid__field\">\n        <button>Ver más</button>\n      </div>\n      <div class=\"list-tech__content__grid__field\">\n        <button *ngIf=\"!tech.is_favourite\" (click)=\"favouriteTech(tech)\">davorito</button>\n        <button *ngIf=\"tech.is_favourite\" (click)=\"removeFavouriteTech(tech)\">quitar favorito</button>\n      </div>\n    </div>\n\n    <div>\n        <p>Total de tecnologias: <strong>{{techs.length}}</strong></p>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ListTechnologiesRoutingModule } from './list-technologies-routing.module';\nimport { ListTechnologiesComponent } from './list-technologies.component';\nimport { HeaderModule } from '../../partials/header/header.module';\nimport { ListTechnologiesService } from '../../services/list-technologies/list-technologies.service';\n\n\n@NgModule({\n  declarations: [ListTechnologiesComponent],\n  imports: [\n    CommonModule,\n    ListTechnologiesRoutingModule,\n    HeaderModule\n  ],\n  providers: [\n    ListTechnologiesService\n  ]\n})\nexport class ListTechnologiesModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { environment } from '../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ListTechnologiesService {\n  host = environment.URL_BACK;\n\n  constructor(private http: HttpClient) {}\n\n  /**\n   * Funcion para configurar los headers para realizar el llamado a los sericios\n   *\n   */\n  getParamsHeader(): HttpHeaders {\n    return new HttpHeaders({\n      'Content-Type': 'application/json',\n    });\n  }\n\n  /**\n   * Funcion para hacer el llamado al servicio de obtener todas las tecnologias\n   *\n   */\n  getListTechnologies(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.http\n        .get<any>(`${this.host}/techs`)\n        .pipe(map((response) => response))\n        // tslint:disable-next-line: deprecation\n        .subscribe((data) => {\n          resolve(data);\n        });\n    });\n  }\n}\n"],"sourceRoot":"webpack:///"}